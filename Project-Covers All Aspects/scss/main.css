/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
*, *::after, *::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
}

html {
  /* font-size: 10px; */
  /* this technique will make the browser to not to be able to change the font-size so what we will do is that we will take the percentage of our total size and than write it. As total size is 100%-16px so if we want to set it to 10px/16*100=62.5 percent then we would be able to help those users who would change the size of font in the browser this will help the user to zoom in our page */
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.6;
  color: #777;
  padding: 2rem;
  /* this was 3rem but due to my preference changed to 2rem */
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(./images/hero.jpg);
  background-size: cover;
  background-position: top;
  /* clip-path: polygon(x y,x y, x y, x y); there are four point and every point will have a reference of the place from where we compared the first-one*/
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 3.5rem;
  left: 3rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* transform: translate(-50%, -50%);: The transform property applies a 2D or 3D transformation to the element. In this case, translate(-50%, -50%) is used to move the element horizontally and vertically by -50% of its own width and height, respectively. Since the element is already centered using top: 50% and left: 50%, this additional translation effectively centers the element perfectly both vertically and horizontally within its container. */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: .5s; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: .5s; */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    opacity: 0.5;
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    opacity: 0.5;
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* display: inline-block does not add a line-break after the element, so the element can sit next to other elements. */
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
  font-weight: 700;
}

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* now here first value is for x direction second for y and third is the blurness that show creates */
}

.btn:active {
  transform: translateY(-0.1rem);
}

.btn-white {
  background: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  /* these both need be to written in order for after-psuedo element to work else it will not work*/
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation-name: moveInBottom;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  animation-delay: 0.75s;
  animation-fill-mode: backwards;
}/*# sourceMappingURL=main.css.map */